// 每个人戴不同帽子的方案数
// 总共有 n 个人和 40 种不同的帽子，帽子编号从 1 到 40
// 给你一个整数列表的列表 hats ，其中 hats[i] 是第 i 个人所有喜欢帽子的列表
// 请你给每个人安排一顶他喜欢的帽子，确保每个人戴的帽子跟别人都不一样，并返回方案数
// 由于答案可能很大，请返回它对10^9+7取余后的结果
// 测试链接 : https://leetcode.cn/problems/number-of-ways-to-wear-different-hats-to-each-other
		// 帽子颜色的最大值
		// 1 ~ m 帽子，能满足哪些人，状态信息 -> int
	// m : 帽子颜色的最大值, 1 ~ m
	// n : 人的数量，0 ~ n-1
	// i : 来到了什么颜色的帽子
	// s : n个人，谁没满足状态就是0，谁满足了状态就是1
	// dp : 记忆化搜索的表
	// 返回 : 有多少种方法
		// 还有人没满足
		// 可能性1 : i颜色的帽子，不分配给任何人
		// 可能性2 : i颜色的帽子，分配给可能的每一个人
		// 用for循环从0 ~ n-1枚举每个人
		// 不用for循环枚举
		// 从当前帽子中依次提取能满足的人
		// 提取出二进制状态中最右侧的1，讲解030-异或运算，题目5，Brian Kernighan算法
		// cur :
		// 0 0 0 1 1 0 1 0
		// -> 0 0 0 0 0 0 1 0
		// -> 0 0 0 0 1 0 0 0
		// -> 0 0 0 1 0 0 0 0
