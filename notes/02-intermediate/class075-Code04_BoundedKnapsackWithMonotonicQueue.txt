// 多重背包单调队列优化
// 宝物筛选
// 一共有n种货物, 背包容量为t
// 每种货物的价值(v[i])、重量(w[i])、数量(c[i])都给出
// 请返回选择货物不超过背包容量的情况下，能得到的最大的价值
// 测试链接 : https://www.luogu.com.cn/problem/P1776
// 请同学们务必参考如下代码中关于输入、输出的处理
// 这是输入输出处理效率很高的写法
// 提交以下的code，提交时请把类名改成"Main"，可以直接通过
	// 严格位置依赖的动态规划 + 单调队列优化枚举
	// 当前来到i号货物，需要j位置的指标，返回指标值
	// 空间压缩的动态规划 + 单调队列优化枚举
	// 因为求dp[i][j]时需要上一行左侧的若干格子
	// 所以做空间压缩时，每一行需要从右往左求
	// 以此来保证左侧的格子还没有更新，还是"上一行"的状况
				// 先把c[i]个的指标进入单调队列
					// 窗口进入enter位置的指标
					// 计算dp[i][j]
					// 窗口弹出j位置的指标
	// 当前来到i号货物，需要j位置的指标，返回指标值
