// 刀砍毒杀怪兽问题
// 怪兽的初始血量是一个整数hp，给出每一回合刀砍和毒杀的数值cuts和poisons
// 第i回合如果用刀砍，怪兽在这回合会直接损失cuts[i]的血，不再有后续效果
// 第i回合如果用毒杀，怪兽在这回合不会损失血量，但是之后每回合都损失poisons[i]的血量
// 并且你选择的所有毒杀效果，在之后的回合都会叠加
// 两个数组cuts、poisons，长度都是n，代表你一共可以进行n回合
// 每一回合你只能选择刀砍或者毒杀中的一个动作
// 如果你在n个回合内没有直接杀死怪兽，意味着你已经无法有新的行动了
// 但是怪兽如果有中毒效果的话，那么怪兽依然会在血量耗尽的那回合死掉
// 返回至少多少回合，怪兽会死掉
// 数据范围 : 
// 1 <= n <= 10^5
// 1 <= hp <= 10^9
// 1 <= cuts[i]、poisons[i] <= 10^9
// 本题来自真实大厂笔试，找不到测试链接，所以用对数器验证
	// 动态规划方法(只是为了验证)
	// 目前没有讲动态规划，所以不需要理解这个函数
	// 这个函数只是为了验证二分答案的方法是否正确的
	// 纯粹为了写对数器验证才设计的方法，血量比较大的时候会超时
	// 这个方法不做要求，此时并不需要理解，可以在学习完动态规划章节之后来看看这个函数
	// 不做要求
	// 二分答案法
	// 最优解
	// 时间复杂度O(n * log(hp))，额外空间复杂度O(1)
			// m中点，一定要让怪兽在m回合内死掉，更多回合无意义
	// cuts、posions，每一回合刀砍、毒杀的效果
	// hp：怪兽血量
	// limit：回合的限制
	// 对数器测试
		// 随机测试的数据量不大
		// 因为数据量大了，fast1方法会超时
		// 所以在数据量不大的情况下，验证fast2方法功能正确即可
		// fast2方法在大数据量的情况下一定也能通过
		// 因为时间复杂度就是最优的
	// 对数器测试
