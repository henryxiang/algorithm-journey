// 节点数为n高度不大于m的二叉树个数
// 现在有n个节点，计算出有多少个不同结构的二叉树
// 满足节点个数为n且树的高度不超过m的方案
// 因为答案很大，所以答案需要模上1000000007后输出
// 测试链接 : https://www.nowcoder.com/practice/aaefe5896cce4204b276e213e725f3ea
// 请同学们务必参考如下代码中关于输入、输出的处理
// 这是输入输出处理效率很高的写法
// 提交以下所有代码，把主类名改成Main，可以直接通过
	// 记忆化搜索
	// 二叉树节点数为n
	// 高度不能超过m
	// 结构数返回
	// 记忆化搜索
		// n > 0
		// n个点，头占掉1个
			// 一共n个节点，头节点已经占用了1个名额
			// 如果左树占用k个，那么右树就占用i-k-1个
	// 严格位置依赖的动态规划
					// 一共i个节点，头节点已经占用了1个名额
					// 如果左树占用k个，那么右树就占用i-k-1个
	// 空间压缩
			// 根据依赖，一定要先枚举列
				// 再枚举行，而且i不需要到达0，i>=1即可
					// 枚举
