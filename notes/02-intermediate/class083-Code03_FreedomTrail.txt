// 自由之路
// 题目描述比较多，打开链接查看
// 测试链接 : https://leetcode.cn/problems/freedom-trail/
	// 为了让所有语言的同学都可以理解
	// 不会使用任何java语言自带的数据结构
	// 只使用最简单的数组结构
	// 指针当前指着轮盘i位置的字符，要搞定key[j....]所有字符，最小代价返回
			// key长度是m
			// 都搞定
			// ring b
			//      i
			// key  b
			//      j
			// 轮盘处在i位置，ring[i] != key[j]
			// jump1 : 顺时针找到最近的key[j]字符在轮盘的什么位置
			// distance1 : 从i顺时针走向jump1有多远
			// jump2 : 逆时针找到最近的key[j]字符在轮盘的什么位置
			// distance2 : 从i逆时针走向jump2有多远
	// 从i开始，顺时针找到最近的v在轮盘的什么位置
		// size[v] : 属于v这个字符的下标有几个
		// sorted[0...size[v]-1]收集了所有的下标，并且有序
		// 有序数组中，找>i尽量靠左的下标
		// 找到了就返回
		// 没找到，那i顺指针一定先走到最小的下标
		// 有序数组中，找<i尽量靠右的下标
		// 找到了就返回
		// 没找到，那i逆指针一定先走到最大的下标
