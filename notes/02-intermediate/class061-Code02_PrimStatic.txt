// Prim算法优化（洛谷）
// 静态空间实现
// 时间复杂度O(n + m) + O((m+n) * log n)
// 测试链接 : https://www.luogu.com.cn/problem/P3366
// 请同学们务必参考如下代码中关于输入、输出的处理
// 这是输入输出处理效率很高的写法
// 提交以下所有代码，把主类名改成Main，可以直接通过
// 建图用链式前向星
// 堆也是用数组结构手写的、且只和节点个数有关
// 这个实现留给有需要的同学
// 但是一般情况下并不需要做到这个程度
	// 链式前向星建图
	// 改写的堆结构
	// where[v] = -1，表示v这个节点，从来没有进入过堆
	// where[v] = -2，表示v这个节点，已经弹出过了
	// where[v] = i(>=0)，表示v这个节点，在堆上的i位置
	// 堆的大小
	// 找到的节点个数
	// 当前处理的是编号为ei的边！
		// 去往v点，权重w
			// v这个点，从来没有进入过堆！
			// v这个点的记录，在堆上的位置是where[v]
	// 堆顶的记录：节点 -> u、到节点的花费 -> w
	// 堆上，i位置的信息 和 j位置的信息 交换！
		// 1节点出发
