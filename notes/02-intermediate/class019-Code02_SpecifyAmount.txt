// 展示acm风格的测试方式
// 子矩阵的最大累加和问题，不要求会解题思路，后面的课会讲
// 每一组测试都给定数据规模
// 需要任何空间都动态生成，在大厂笔试或者比赛中，这种方式并不推荐
// 测试链接 : https://www.nowcoder.com/practice/cb82a97dcd0d48a7b1f4ee917e2c0409?
// 请同学们务必参考如下代码中关于输入、输出的处理
// 这是输入输出处理效率很高的写法
// 提交以下的code，提交时请把类名改成"Main"，可以直接通过
		// 把文件里的内容，load进来，保存在内存里，很高效，很经济，托管的很好
		// 一个一个读数字
		// 提交答案的时候用的，也是一个内存托管区
		while (in.nextToken() != StreamTokenizer.TT_EOF) { // 文件没有结束就继续
			// n，二维数组的行
			// m，二维数组的列
			// 装数字的矩阵，临时动态生成
	// 求子矩阵的最大累加和，后面的课会讲
			// 需要的辅助数组，临时动态生成
	// 求子数组的最大累加和，后面的课会讲
