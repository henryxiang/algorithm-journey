// windy数
// 不含前导零且相邻两个数字之差至少为2的正整数被称为windy数
// windy想知道[a,b]范围上总共有多少个windy数
// 测试链接 : https://www.luogu.com.cn/problem/P2657
// 请同学们务必参考如下代码中关于输入、输出的处理
// 这是输入输出处理效率很高的写法
// 提交以下的code，提交时请把类名改成"Main"，可以直接通过
	// 求0~num范围上，windy数的个数
	// offset完全由len决定，为了方便提取num中某一位数字（上节课内容）
	// 从num的高位开始，还剩下len位没有决定
	// 前一位的数字是pre，如果pre == 10，表示从来没有选择过数字
	// 如果之前的位已经确定比num小，那么free == 1，表示接下的数字可以自由选择
	// 如果之前的位和num一样，那么free == 0，表示接下的数字不能大于num当前位的数字
	// 返回<=num的windy数有多少个
				// 之前的位和num一样，此时不能随意选择数字
				// 也从来没有选择过数字
				// 就表示：来到的是num的最高位
				ans += f(num, offset / 10, len - 1, 10, 1); // 一个数字也不要
				// 之前的位和num一样，此时不能随意选择数字，
				// 之前选择过数字pre
				// free == 1，可以自由选择数字，前面的状况 < num
				// 从来没有选择过数字
				ans += f(num, offset / 10, len - 1, 10, 1); // 还是可以不选择数字
				// free == 1，可以自由选择数字，前面的状况 < num
				// 选择过数字pre
