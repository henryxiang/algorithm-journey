// 外星千足虫
// 一共有n种虫子，编号1~n，虫子腿为奇数认为是外星虫，偶数认为是地球虫
// 一共有m条虫子腿的测量记录，记录编号1~m
// 比如其中一条测量记录为，011 1，表示1号虫没参与，2号、3号虫参与了，总腿数为奇数
// 测量记录保证不会有自相矛盾的情况，但是可能有冗余的测量结果
// 也许拥有从第1号到第k号测量记录就够了，k+1~m号测量记录有或者没有都不影响测量结果
// 打印这个k，并且打印每种虫子到底是外星虫还是地球虫
// 如果使用所有的测量结果，依然无法确定每种虫子的属性，打印"Cannot Determine"
// 1 <= n <= 1000
// 1 <= m <= 2000
// 测试链接 : https://www.luogu.com.cn/problem/P2447
// 提交以下的code，提交时请把类名改成"Main"，可以通过所有测试用例
	// 高斯消元解决异或方程组模版 + 位图，很小的改写
			// 一旦没有唯一解，可以结束了
					// 因为列从1开始，所以从第1位状态开始才有用
					// 于是1~n+1列的状态，对应1~n+1位
					// 但是位图中永远有0位，只不过从来不使用
					// 于是一共有n+2位状态，都需要异或
	// 把row行，col列的状态设置成v
	// 得到row行，col列的状态
	// row2行状态 = row2行状态 ^ row1行状态
	// 状态一共有bits位
	// Kattio类IO效率很好，但还是不如StreamTokenizer
	// 只有StreamTokenizer无法正确处理时，才考虑使用这个类
	// 参考链接 : https://oi-wiki.org/lang/java-pro/
