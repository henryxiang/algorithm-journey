// 最优比率生成树
// 一共有n个村庄，每个村庄由(x, y, z)表示
// 其中(x,y)代表村庄在二维地图中的位置，z代表其海拔高度
// 任意两个村庄之间的距离就是二维地图中的欧式距离
// 任意两个村庄之间的修路花费就是海拔差值的绝对值
// 现在想把所有村庄联通起来，希望修路的条数尽量少，同时希望让
// 总花费 / 总距离，这个比值尽量小，返回最小的比值是多少，结果保留小数点后3位其余部分舍弃
// 2 <= n <= 10^3
// 0 <= x、y <= 10^4
// 0 <= z <= 10^7
// 测试链接 : http://poj.org/problem?id=2728
// 提交以下的code，提交时请把类名改成"Main"，可以通过所有测试用例
	// 邻接矩阵结构下的prim算法，从节点1出发得到最小生成树的权值和
		// 结余值做边权，进而统计距离
		// 距离只和边权有关，原始的dist、cost不重要
		// 从1号点出发，更新到所有点的距离，也就是value数组
		// 最小生成树一定有n-1条边，所以一共有n-1轮解锁，每次解锁新的点进入最小生成树的点集
			// 在没有解锁的点中，找到离最小生成树的点集最近的点，进行解锁
			// 最小的边进入最小生成树的边集，解锁的点进入最小生成树的点集
			// 查看新的解锁点能不能拉进其他点的距离
		// 返回最小生成树的权值和
				// 如果最小生成树的权值 <= 0，达标，左侧二分找寻更小比值
				// 如果最小生成树的权值 > 0，不达标，右侧二分找寻更大比值
