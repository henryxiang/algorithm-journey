// 线段树范围增加操作 + 区间最值操作
// 给定一个长度为n的数组arr，实现支持以下四种操作的结构
// 操作 0 l r x : 把arr[l..r]范围的每个数v，增加x
// 操作 1 l r x : 把arr[l..r]范围的每个数v，更新成min(v, x)
// 操作 2 l r   : 查询arr[l..r]范围上的最大值
// 操作 3 l r   : 查询arr[l..r]范围上的累加和
// 对数器验证
	// 原始数组
	// 累加和信息(查询信息)
	// 最大值信息(只是查询信息，不再是懒更新信息，懒更新功能被maxAdd数组替代了)
	// 最大值个数(查询信息)
	// 严格次大值(查询信息)
	// 最大值的增加幅度(懒更新信息)
	// 除最大值以外其他数字的增加幅度(懒更新信息)
		// 为什么拿全局最大值不写成 : tmp = max[i]
		// 因为父亲范围的最大值可能已经被懒更新任务修改过了
		// 现在希望拿的是懒更新之前的最大值
		// 子范围的max值没有修改过，所以写成 : tmp = Math.max(max[l], max[r])
	// 为了验证
	// 为了验证
	// 为了验证
	// 为了验证
	// 为了验证
