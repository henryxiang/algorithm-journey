// 消防(递归版)
// 一共n个节点，编号1~n，有n-1条边连接成一棵树，每条边上有非负权值
// 给定一个非负整数s，表示可以在树上选择一条长度不超过s的路径
// 然后在这条路径的点上建立消防站，每个居民可以去往这条路径上的任何消防站
// 目标：哪怕最远的居民走到消防站的距离也要尽量少
// 返回最远居民走到消防站的最短距离
// 测试链接 : https://www.luogu.com.cn/problem/P2491
// 提交以下的code，提交时请把类名改成"Main"
// C++这么写能通过，java会因为递归层数太多而爆栈
// java能通过的写法参考本节课Code05_FireFighting2文件
	// pred[i] : i节点在直径上，和前一个点之间的距离，以start做根
	// 不能走向直径路径上的节点
	// 能走出的最大距离
	// 单调队列维护窗口内最大值
	// 不会的看讲解054
		// 用h和t表示单调队列的头和尾
		// 窗口范围[l,r)，左闭右开，直径上的窗口[l...r-1]
		// l是窗口左端点，r是窗口右端点的再下一个点
		// 课上图解是从start到end，实际是从end到start，思路没有区别
