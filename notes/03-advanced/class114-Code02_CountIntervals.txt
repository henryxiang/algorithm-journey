// 统计区间中的整数数目
// 实现CountIntervals类的如下三个方法
// 1) CountIntervals() : 初始化
// 2) void add(int l, int r) : 把[l, r]范围上的数字都设置成1
// 3) int count() : 返回整个区间有多少个1
// CountIntervals类需要支持1 ~ 10^9范围
// 调用add和count方法总共10^5次
// 测试链接 : https://leetcode.cn/problems/count-integers-in-intervals/
	// 开点线段树的实现
	// 为了所有语言的同学都容易改出来
	// 选择用静态空间的方式实现
	// 该方法的打败比例不高但是非常好想
	// 有兴趣的同学可以研究其他做法
		// 支持的最大范围
		// 空间大小定成这个值是实验的结果
		// 这个题的特殊性在于，只有改1的操作，没有改0的操作
		// 理解这个就可以分析出不需要懒更新机制，原因有两个
		// 1) 查询操作永远查的是整个范围1的数量，不会有小范围的查询，每次都返回sum[1]
		//    这意味着只要能把sum[1]更新正确即可，up函数可以保证这一点
		// 2) 一个范围已经全是1，那以后都会是1，没有必要把全是1的懒更新信息向下传递
		// 这个函数的功能比线段树能做到的范围修改功能简单很多
		// 功能有阉割就意味着存在优化的点
