// 线段树的区间最值操作
// 给定一个长度为n的数组arr，实现支持以下三种操作的结构
// 操作 0 l r x : 把arr[l..r]范围的每个数v，更新成min(v, x)
// 操作 1 l r   : 查询arr[l..r]范围上的最大值
// 操作 2 l r   : 查询arr[l..r]范围上的累加和
// 三种操作一共调用m次，做到时间复杂度O(n * log n + m * log n)
// 对数器验证
	// 假设初始数组中的值不会出现比LOWEST还小的值
	// 假设更新操作时jobv的数值也不会出现比LOWEST还小的值
	// 原始数组
	// 累加和
	// 最大值(既是查询信息也是懒更新信息，课上已经讲解了)
	// 最大值个数
	// 严格次大值(second max)
	// 一定是没有颠覆掉次大值的懒更新信息下发，也就是说：
	// 最大值被压成v，并且v > 严格次大值的情况下
	// sum和max怎么调整
			// 1) 任务没有全包
			// 2) jobv <= sem[i]
	// 为了验证
	// 为了验证
	// 为了验证
	// 为了验证
