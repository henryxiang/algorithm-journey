// Morris遍历求两个节点的最低公共祖先
// 测试链接 : https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree/
	// 不提交这个类
	// 提交以下的方法
				} else { // 第二次来到cur
						// 检查left是否在cur左树的右边界上
							// 检查left看看右树里是否有o2
							// 为什么此时检查的是left而不是cur
							// 因为cur右树上的某些右指针可能没有恢复回来
							// 需要等右指针恢复回来之后检查才不出错
							// 所以此时检查的是left而不是cur
							// 课上已经重点图解了
		// 如果morris遍历结束了还没有收集到答案
		// 此时最后一个left还没有验证，它一定是答案
	// 以head为头的树进行先序遍历，o1和o2谁先被找到就返回谁
	// 以head为头的树遍历右边界，返回是否找到了target
