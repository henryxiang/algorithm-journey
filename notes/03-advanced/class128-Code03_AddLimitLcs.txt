// 增加限制的最长公共子序列问题
// 给定两个字符串s1和s2，s1长度为n，s2长度为m
// 返回s1和s2的最长公共子序列长度
// 注意：
// 两个字符串都只由小写字母组成
// 1 <= n <= 10^6
// 1 <= m <= 10^3
// 状态设计优化的经典题，对数器验证
	// 为了测试
	// 为了测试
	// 随机生成长度为n只有小写字母构成的字符串
	// 经典动态规划的版本
	// 来自讲解067，题目3，最经典的方法4
	// 不利用任何限制，时间复杂度O(n*m)
	// 利用限制条件做优化的版本
	// 时间复杂度O(26*n + m^2)
				// s1的i长度，对应的字符是s1[i-1]
	// 长度为i的s2前缀串，想和s1字符串形成长度为j的公共子序列
	// 返回至少需要多长的s1前缀串才能做到
	// 如果怎么都做不到，返回NA
		// s2前缀串长度为i，最后字符s2[i-1]
