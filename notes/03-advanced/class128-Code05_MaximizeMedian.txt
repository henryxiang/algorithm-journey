// 相邻必选的子序列最大中位数
// 给定一个长度为n的数组arr
// 合法子序列定义为，任意相邻的两个数至少要有一个被挑选所组成的子序列
// 求所有合法子序列中，最大中位数是多少
// 中位数的定义为上中位数
// [1, 2, 3, 4]的上中位数是2
// [1, 2, 3, 4, 5]的上中位数是3
// 2 <=  n <= 10^5
// 1 <= arr[i] <= 10^9
// 来自真实大厂笔试，对数器验证
	// 正式方法
	// 时间复杂度O(n * log n)
	// 任意相邻的两数至少选一个来生成子序列
	// 到底有没有一个合法子序列，能让其中>=x的数达到一半以上
	// 任意相邻的两数至少选一个来生成子序列
	// 返回合法子序列的最大累加和
			// dp[i][0] : i位置的数字，选和不选皆可，i...范围上形成合法子序列的最大累加和
			// dp[i][1] : i位置的数字，一定要选，i...范围上形成合法子序列的最大累加和
	// 暴力方法
	// 为了验证
	// 暴力方法
	// 为了验证
	// 为了测试
	// 为了测试
