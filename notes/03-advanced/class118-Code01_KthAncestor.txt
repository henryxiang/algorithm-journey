// 树节点的第K个祖先
// 树上有n个节点，编号0 ~ n-1，树的结构用parent数组代表
// 其中parent[i]是节点i的父节点，树的根节点是编号为0
// 树节点i的第k个祖先节点，是从节点i开始往上跳k步所来到的节点
// 实现TreeAncestor类
// TreeAncestor(int n, int[] parent) : 初始化
// getKthAncestor(int i, int k) : 返回节点i的第k个祖先节点，不存在返回-1
// 测试链接 : https://leetcode.cn/problems/kth-ancestor-of-a-tree-node/
		// 根据节点个数n，计算出2的几次方就够用了
		// 链式前向星建图
		// deep[i] : 节点i在第几层
		// stjump[i][p] : 节点i往上跳2的p次方步，到达的节点编号
		// 当前来到i节点，i节点父亲节点是f
			// s是想要去往的层数
